openapi: 3.0.0
info:
  title: DJJ Inventory System API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /api/register:
    post:
      summary: 用户注册
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayload'
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/login:
    post:
      summary: 用户登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPayload'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/logout:
    post:
      summary: 用户登出
      responses:
        '204':
          description: 已登出，无返回体

  /api/roles:
    get:
      summary: 列表所有角色
      responses:
        '200':
          description: 角色列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
    post:
      summary: 创建角色
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePayload'
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'

  /api/roles/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 获取单个角色
      responses:
        '200':
          description: 单个角色
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    put:
      summary: 更新角色
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePayload'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      summary: 删除角色
      responses:
        '204':
          description: 删除成功

  /api/permissions:
    get:
      summary: 列表所有权限
      responses:
        '200':
          description: 权限列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
    post:
      summary: 创建权限
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionPayload'
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'

  /api/permissions/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 获取单个权限
      responses:
        '200':
          description: 单个权限
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
    put:
      summary: 更新权限
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionPayload'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
    delete:
      summary: 删除权限
      responses:
        '204':
          description: 删除成功

  /api/users:
    get:
      summary: 列表所有用户
      responses:
        '200':
          description: 用户列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: 创建用户
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPayload'
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/users/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: 获取单个用户
      responses:
        '200':
          description: 单个用户
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: 更新用户
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePayload'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: 删除用户
      responses:
        '204':
          description: 删除成功

  /api/users/{id}/roles:
    get:
      summary: 列出用户拥有的角色
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 角色列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'

  /api/users/{id}/roles/{rid}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      - in: path
        name: rid
        required: true
        schema:
          type: integer
    post:
      summary: 给用户分配角色
      responses:
        '204':
          description: 分配成功
    delete:
      summary: 从用户移除角色
      responses:
        '204':
          description: 移除成功

components:
  schemas:
    RegisterPayload:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        role_ids:
          type: array
          items:
            type: integer
    LoginPayload:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    RolePayload:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    Permission:
      type: object
      properties:
        id:
          type: integer
        action:
          type: string
        object:
          type: string
    PermissionPayload:
      type: object
      required:
        - action
        - object
      properties:
        action:
          type: string
        object:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
    UserPayload:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        role_ids:
          type: array
          items:
            type: integer
    UserUpdatePayload:
      type: object
      properties:
        username:
          type: string
